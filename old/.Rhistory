for(i in indikator$INDIKATOR_ID){
filecon<-file("data_ttl/observationset_",str_pad(i,4,pad="0"),".ttl",open="w")
print(paste0("DATASET:",i))
writeLines(paste0("<",ts,"DS",str_pad(i,4,pad="0"),"/observation/> a <https://cube.link/ObservationSet> ;\n"),filecon)
df<-indikatorvalue[indikatorvalue$INDIKATOR_ID==i,]
#PART1: Observation Collection
df$temp_string<-paste0("<https://cube.link/observation> <",ts,"DS",str_pad(i,4,pad="0"),"/observation/",df$label,"> ,\n")
df$temp_string[nrow(df)]<-str_replace(df$temp_string[nrow(df)],",\n",".\n\n")
writeLines(temp_string,filecon)
close(filecon)
filecon<-file("data_ttl/observations_",str_pad(i,4,pad="0"),".ttl",open="w")
#PART2: Observation Values
writeLines(paste0("<",ts,"DS",str_pad(i,4,pad="0"),"/observation/",df$label,">  a <https://cube.link/Observation> ;\n",
"<",ts,"property/ZEIT> <",ts,"code/Z3112",df$JAHR,"> ;\n",
"<",ts,"property/RAUM> <",ts,"code/R",str_pad(df$RAUMEINHEIT_ID[j],5,pad="0"),"> ;\n",
"<",ts,"attribute/KORREKTUR> false ;\n",
"<",ts,"measure/M",str_pad(i,4,pad="0"),"> ",df$VALUE," ;\n",
#TODO insert here properties
"<http://schema.org/identifier> 'Z3112",df$JAHR,"R",str_pad(df$RAUMEINHEIT_ID,5,pad="0"),str_pad(i,4,pad="0"),"XXX0000XXX0000XXX0000' ;\n",
"<https://cube.link/observedBy> <",ts,"> ;\n",
"<",ts,"property/TIME> '",df$JAHR,"-12-31'^^<http://www.w3.org/2001/XMLSchema#date> .\n\n"
),filecon)
close(filecon)
}
#code might be improved because of for loop
indikatorvalue$label<-paste0("DS",str_pad(indikatorvalue$INDIKATOR_ID,4,pad="0"),"-R",str_pad(indikatorvalue$RAUMEINHEIT_ID,5,pad="0"),"-Z3112",indikatorvalue$JAHR)
for(i in indikator$INDIKATOR_ID){
filecon<-file(paste0("data_ttl/observationset_",str_pad(i,4,pad="0"),".ttl"),open="w")
print(paste0("DATASET:",i))
writeLines(paste0("<",ts,"DS",str_pad(i,4,pad="0"),"/observation/> a <https://cube.link/ObservationSet> ;\n"),filecon)
df<-indikatorvalue[indikatorvalue$INDIKATOR_ID==i,]
#PART1: Observation Collection
df$temp_string<-paste0("<https://cube.link/observation> <",ts,"DS",str_pad(i,4,pad="0"),"/observation/",df$label,"> ,\n")
df$temp_string[nrow(df)]<-str_replace(df$temp_string[nrow(df)],",\n",".\n\n")
writeLines(temp_string,filecon)
close(filecon)
filecon<-file(paste0("data_ttl/observations_",str_pad(i,4,pad="0"),".ttl"),open="w")
#PART2: Observation Values
writeLines(paste0("<",ts,"DS",str_pad(i,4,pad="0"),"/observation/",df$label,">  a <https://cube.link/Observation> ;\n",
"<",ts,"property/ZEIT> <",ts,"code/Z3112",df$JAHR,"> ;\n",
"<",ts,"property/RAUM> <",ts,"code/R",str_pad(df$RAUMEINHEIT_ID[j],5,pad="0"),"> ;\n",
"<",ts,"attribute/KORREKTUR> false ;\n",
"<",ts,"measure/M",str_pad(i,4,pad="0"),"> ",df$VALUE," ;\n",
#TODO insert here properties
"<http://schema.org/identifier> 'Z3112",df$JAHR,"R",str_pad(df$RAUMEINHEIT_ID,5,pad="0"),str_pad(i,4,pad="0"),"XXX0000XXX0000XXX0000' ;\n",
"<https://cube.link/observedBy> <",ts,"> ;\n",
"<",ts,"property/TIME> '",df$JAHR,"-12-31'^^<http://www.w3.org/2001/XMLSchema#date> .\n\n"
),filecon)
close(filecon)
}
#code might be improved because of for loop
indikatorvalue$label<-paste0("DS",str_pad(indikatorvalue$INDIKATOR_ID,4,pad="0"),"-R",str_pad(indikatorvalue$RAUMEINHEIT_ID,5,pad="0"),"-Z3112",indikatorvalue$JAHR)
for(i in 1:1){
#for(i in indikator$INDIKATOR_ID){
filecon<-file(paste0("data_ttl/observationset_",str_pad(i,4,pad="0"),".ttl"),open="w")
print(paste0("DATASET:",i))
writeLines(paste0("<",ts,"DS",str_pad(i,4,pad="0"),"/observation/> a <https://cube.link/ObservationSet> ;\n"),filecon)
df<-indikatorvalue[indikatorvalue$INDIKATOR_ID==i,]
#PART1: Observation Collection
df$temp_string<-paste0("<https://cube.link/observation> <",ts,"DS",str_pad(i,4,pad="0"),"/observation/",df$label,"> ,\n")
df$temp_string[nrow(df)]<-str_replace(df$temp_string[nrow(df)],",\n",".\n\n")
writeLines(df$temp_string,filecon)
close(filecon)
filecon<-file(paste0("data_ttl/observations_",str_pad(i,4,pad="0"),".ttl"),open="w")
#PART2: Observation Values
writeLines(paste0("<",ts,"DS",str_pad(i,4,pad="0"),"/observation/",df$label,">  a <https://cube.link/Observation> ;\n",
"<",ts,"property/ZEIT> <",ts,"code/Z3112",df$JAHR,"> ;\n",
"<",ts,"property/RAUM> <",ts,"code/R",str_pad(df$RAUMEINHEIT_ID[j],5,pad="0"),"> ;\n",
"<",ts,"attribute/KORREKTUR> false ;\n",
"<",ts,"measure/M",str_pad(i,4,pad="0"),"> ",df$VALUE," ;\n",
#TODO insert here properties
"<http://schema.org/identifier> 'Z3112",df$JAHR,"R",str_pad(df$RAUMEINHEIT_ID,5,pad="0"),str_pad(i,4,pad="0"),"XXX0000XXX0000XXX0000' ;\n",
"<https://cube.link/observedBy> <",ts,"> ;\n",
"<",ts,"property/TIME> '",df$JAHR,"-12-31'^^<http://www.w3.org/2001/XMLSchema#date> .\n\n"
),filecon)
close(filecon)
}
close(filecon)
str_replace(df$temp_string[nrow(df)],",\n",".\n\n")
df$temp_string
head(df)
i
head(indikatorvalue)
i
df<-indikatorvalue[indikatorvalue$INDIKATOR_ID==i,]
nrow(df)
head(indikator$INDIKATOR_ID)
#code might be improved because of for loop
indikatorvalue$label<-paste0("DS",str_pad(indikatorvalue$INDIKATOR_ID,4,pad="0"),"-R",str_pad(indikatorvalue$RAUMEINHEIT_ID,5,pad="0"),"-Z3112",indikatorvalue$JAHR)
for(i in 419:419){
#for(i in indikator$INDIKATOR_ID){
filecon<-file(paste0("data_ttl/observationset_",str_pad(i,4,pad="0"),".ttl"),open="w")
print(paste0("DATASET:",i))
writeLines(paste0("<",ts,"DS",str_pad(i,4,pad="0"),"/observation/> a <https://cube.link/ObservationSet> ;\n"),filecon)
df<-indikatorvalue[indikatorvalue$INDIKATOR_ID==i,]
#PART1: Observation Collection
df$temp_string<-paste0("<https://cube.link/observation> <",ts,"DS",str_pad(i,4,pad="0"),"/observation/",df$label,"> ,\n")
df$temp_string[nrow(df)]<-str_replace(df$temp_string[nrow(df)],",\n",".\n\n")
writeLines(df$temp_string,filecon)
close(filecon)
filecon<-file(paste0("data_ttl/observations_",str_pad(i,4,pad="0"),".ttl"),open="w")
#PART2: Observation Values
writeLines(paste0("<",ts,"DS",str_pad(i,4,pad="0"),"/observation/",df$label,">  a <https://cube.link/Observation> ;\n",
"<",ts,"property/ZEIT> <",ts,"code/Z3112",df$JAHR,"> ;\n",
"<",ts,"property/RAUM> <",ts,"code/R",str_pad(df$RAUMEINHEIT_ID[j],5,pad="0"),"> ;\n",
"<",ts,"attribute/KORREKTUR> false ;\n",
"<",ts,"measure/M",str_pad(i,4,pad="0"),"> ",df$VALUE," ;\n",
#TODO insert here properties
"<http://schema.org/identifier> 'Z3112",df$JAHR,"R",str_pad(df$RAUMEINHEIT_ID,5,pad="0"),str_pad(i,4,pad="0"),"XXX0000XXX0000XXX0000' ;\n",
"<https://cube.link/observedBy> <",ts,"> ;\n",
"<",ts,"property/TIME> '",df$JAHR,"-12-31'^^<http://www.w3.org/2001/XMLSchema#date> .\n\n"
),filecon)
close(filecon)
}
#code might be improved because of for loop
indikatorvalue$label<-paste0("DS",str_pad(indikatorvalue$INDIKATOR_ID,4,pad="0"),"-R",str_pad(indikatorvalue$RAUMEINHEIT_ID,5,pad="0"),"-Z3112",indikatorvalue$JAHR)
for(i in 419:419){
#for(i in indikator$INDIKATOR_ID){
filecon<-file(paste0("data_ttl/observationset_",str_pad(i,4,pad="0"),".ttl"),open="w")
print(paste0("DATASET:",i))
writeLines(paste0("<",ts,"DS",str_pad(i,4,pad="0"),"/observation/> a <https://cube.link/ObservationSet> ;\n"),filecon)
df<-indikatorvalue[indikatorvalue$INDIKATOR_ID==i,]
#PART1: Observation Collection
df$temp_string<-paste0("<https://cube.link/observation> <",ts,"DS",str_pad(i,4,pad="0"),"/observation/",df$label,"> ,\n")
df$temp_string[nrow(df)]<-str_replace(df$temp_string[nrow(df)],",\n",".\n\n")
writeLines(df$temp_string,filecon)
close(filecon)
filecon<-file(paste0("data_ttl/observations_",str_pad(i,4,pad="0"),".ttl"),open="w")
#PART2: Observation Values
writeLines(paste0("<",ts,"DS",str_pad(i,4,pad="0"),"/observation/",df$label,">  a <https://cube.link/Observation> ;\n",
"<",ts,"property/ZEIT> <",ts,"code/Z3112",df$JAHR,"> ;\n",
"<",ts,"property/RAUM> <",ts,"code/R",str_pad(df$RAUMEINHEIT_ID,5,pad="0"),"> ;\n",
"<",ts,"attribute/KORREKTUR> false ;\n",
"<",ts,"measure/M",str_pad(i,4,pad="0"),"> ",df$VALUE," ;\n",
#TODO insert here properties
"<http://schema.org/identifier> 'Z3112",df$JAHR,"R",str_pad(df$RAUMEINHEIT_ID,5,pad="0"),str_pad(i,4,pad="0"),"XXX0000XXX0000XXX0000' ;\n",
"<https://cube.link/observedBy> <",ts,"> ;\n",
"<",ts,"property/TIME> '",df$JAHR,"-12-31'^^<http://www.w3.org/2001/XMLSchema#date> .\n\n"
),filecon)
close(filecon)
}
# ********************************
#Version 0.1 - 15.07.2021 - Raum, Zeit
# Variables to change
#ts: triple-store destination
ts<-"http://datashop.westeurope.cloudapp.azure.com/statistics/"
# Vorbereitungen ----
# *************************************
# Aendern der Sprache in R
Sys.setenv(LANG = "de")
# Clear R's Brain
#rm(list = ls())
# Laden der Libraries
library(pacman)
p_load(tidyverse, forcats, haven, readxl, stringr)
# Verbinden mit der DB ---> An pers√∂nliche EInstellungen anpassen
source("~/db_connect.R")
filecon<-file("data_ttl/raum_zeit.ttl",open="w")
writeLines(paste0("<",ts,"property/RAUM> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Raum' ;\n","<http://schema.org/identifier> 'RAUM' .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Gemeinde> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Gemeinde' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Bezirk> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Bezirk> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Bezirk' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Kanton> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Planungsregion> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Planungsregion' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Kanton> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Kanton> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Kanton' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Land> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Land> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Land' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Kontinent> .\n\n"),filecon)
for(i in 1:nrow(raum)){
writeLines(paste0("<",ts,"code/R",str_pad(raum$RAUMEINHEIT_ID[i],5,pad="0"),"> a <http://www.w3.org/2004/02/skos/core#Concept> , <http://schema.org/Place> ;\n","<http://schema.org/name> '",raum$NAME[i],"'@de  ;\n","<http://www.w3.org/2004/02/skos/core#inScheme> <",ts,"scheme/",raum$DESCRIPTION[i],"> ;\n","<http://schema.org/identifier> 'R",str_pad(raum$RAUMEINHEIT_ID[i],5,pad="0"),"' .\n\n"),filecon)
}
writeLines(paste0("<",ts,"property/ZEIT> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Zeit' ;\n","<http://schema.org/description> 'Repr√§sentation der Zeit als Konzept, repr√§sentiert die vollst√§ndige Komplexit√§t.' ;\n","<http://schema.org/identifier> 'ZEIT' .\n\n"),filecon)
writeLines(paste0("<",ts,"property/TIME> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Zeit' ;\n","<http://schema.org/description> 'Repr√§sentation der Zeit als ISO 8601 Datum (vereinfacht).' ;\n","<http://schema.org/identifier> 'TIME' .\n\n"),filecon)
writeLines(paste0("<",ts,"schema/hasEnd> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Ende der Periode'@de ;\n","<http://schema.org/description> 'Ende einer zeitlichen Einheit'@de ;\n","<http://schema.org/identifier> 'hasEnd' .\n\n"),filecon)
writeLines(paste0("<",ts,"schema/referenceTime> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Referenzzeit' .\n\n"),filecon)
for(i in min(indikator$MIN_JAHR,na.rm=T):max(indikator$MAX_JAHR,na.rm=T)){
writeLines(paste0("<",ts,"code/Z3112",i,"> a <http://www.w3.org/2004/02/skos/core#Concept> , <http://www.w3.org/2006/time#TemporalEntity> ;\n",
"<http://schema.org/name> 'Z3112",i,"' ;\n",
"<",ts,"schema/hasEnd> ",i,"-12-31^^<http://www.w3.org/2001/XMLSchema#date> ;\n",
"<",ts,"schema/referenceTime> <",ts,"code/Tag> ,\n",
"<",ts,"code/Monat> ,\n",
"<",ts,"code/Quartal> ,\n",
"<",ts,"code/Trimester> ,\n",
"<",ts,"code/Semester> ,\n",
"<",ts,"code/Jahr> .\n\n"),filecon)
}
close(filecon)
filecon<-file("data_ttl/datasets.ttl",open="w")
for(i in 1:nrow(indikator)){
writeLines(paste0("<",ts,"DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"> a <https://cube.link/Cube> ;\n",
"<http://schema.org/name> '",indikator$NAME[i],"' ;\n",
"<http://schema.org/identifier> 'DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"' ;\n",
"<https://cube.link/observationSet> <",ts,"DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"/observation/> ;\n",
"<https://cube.link/observationConstraint> <",ts,"DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"/shape/ .\n\n"),filecon)
}
close(filecon)
#code might be improved because of for loop
indikatorvalue$label<-paste0("DS",str_pad(indikatorvalue$INDIKATOR_ID,4,pad="0"),"-R",str_pad(indikatorvalue$RAUMEINHEIT_ID,5,pad="0"),"-Z3112",indikatorvalue$JAHR)
#for(i in 419:419){
for(i in indikator$INDIKATOR_ID){
filecon<-file(paste0("data_ttl/observationset_",str_pad(i,4,pad="0"),".ttl"),open="w")
print(paste0("DATASET:",i))
writeLines(paste0("<",ts,"DS",str_pad(i,4,pad="0"),"/observation/> a <https://cube.link/ObservationSet> ;\n"),filecon)
df<-indikatorvalue[indikatorvalue$INDIKATOR_ID==i,]
#PART1: Observation Collection
df$temp_string<-paste0("<https://cube.link/observation> <",ts,"DS",str_pad(i,4,pad="0"),"/observation/",df$label,"> ,\n")
#the last one has to be a point and not a comma
df$temp_string[nrow(df)]<-str_replace(df$temp_string[nrow(df)],",\n",".\n\n")
writeLines(df$temp_string,filecon)
close(filecon)
filecon<-file(paste0("data_ttl/observations_",str_pad(i,4,pad="0"),".ttl"),open="w")
#PART2: Observation Values
writeLines(paste0("<",ts,"DS",str_pad(i,4,pad="0"),"/observation/",df$label,">  a <https://cube.link/Observation> ;\n",
"<",ts,"property/ZEIT> <",ts,"code/Z3112",df$JAHR,"> ;\n",
"<",ts,"property/RAUM> <",ts,"code/R",str_pad(df$RAUMEINHEIT_ID,5,pad="0"),"> ;\n",
"<",ts,"attribute/KORREKTUR> false ;\n",
"<",ts,"measure/M",str_pad(i,4,pad="0"),"> ",df$VALUE," ;\n",
#TODO insert here properties
"<http://schema.org/identifier> 'Z3112",df$JAHR,"R",str_pad(df$RAUMEINHEIT_ID,5,pad="0"),str_pad(i,4,pad="0"),"XXX0000XXX0000XXX0000' ;\n",
"<https://cube.link/observedBy> <",ts,"> ;\n",
"<",ts,"property/TIME> '",df$JAHR,"-12-31'^^<http://www.w3.org/2001/XMLSchema#date> .\n\n"
),filecon)
close(filecon)
}
df
i
indikatorvalue[indikatorvalue$INDIKATOR_ID==i,]
indikator[indikator$INDIKATOR_ID==i,]
dim(indikator)
names(indikator)
dim(indiaktor)
dim(indikator)
# ********************************
#Version 0.1 - 15.07.2021 - Raum, Zeit
# Variables to change
#ts: triple-store destination
ts<-"http://datashop.westeurope.cloudapp.azure.com/statistics/"
# Vorbereitungen ----
# *************************************
# Aendern der Sprache in R
Sys.setenv(LANG = "de")
# Clear R's Brain
#rm(list = ls())
# Laden der Libraries
library(pacman)
p_load(tidyverse, forcats, haven, readxl, stringr)
# Verbinden mit der DB ---> An pers√∂nliche EInstellungen anpassen
source("~/db_connect.R")
filecon<-file("data_ttl/raum_zeit.ttl",open="w")
writeLines(paste0("<",ts,"property/RAUM> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Raum' ;\n","<http://schema.org/identifier> 'RAUM' .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Gemeinde> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Gemeinde' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Bezirk> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Bezirk> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Bezirk' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Kanton> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Planungsregion> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Planungsregion' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Kanton> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Kanton> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Kanton' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Land> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Land> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Land' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Kontinent> .\n\n"),filecon)
for(i in 1:nrow(raum)){
writeLines(paste0("<",ts,"code/R",str_pad(raum$RAUMEINHEIT_ID[i],5,pad="0"),"> a <http://www.w3.org/2004/02/skos/core#Concept> , <http://schema.org/Place> ;\n","<http://schema.org/name> '",raum$NAME[i],"'@de  ;\n","<http://www.w3.org/2004/02/skos/core#inScheme> <",ts,"scheme/",raum$DESCRIPTION[i],"> ;\n","<http://schema.org/identifier> 'R",str_pad(raum$RAUMEINHEIT_ID[i],5,pad="0"),"' .\n\n"),filecon)
}
writeLines(paste0("<",ts,"property/ZEIT> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Zeit' ;\n","<http://schema.org/description> 'Repr√§sentation der Zeit als Konzept, repr√§sentiert die vollst√§ndige Komplexit√§t.' ;\n","<http://schema.org/identifier> 'ZEIT' .\n\n"),filecon)
writeLines(paste0("<",ts,"property/TIME> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Zeit' ;\n","<http://schema.org/description> 'Repr√§sentation der Zeit als ISO 8601 Datum (vereinfacht).' ;\n","<http://schema.org/identifier> 'TIME' .\n\n"),filecon)
writeLines(paste0("<",ts,"schema/hasEnd> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Ende der Periode'@de ;\n","<http://schema.org/description> 'Ende einer zeitlichen Einheit'@de ;\n","<http://schema.org/identifier> 'hasEnd' .\n\n"),filecon)
writeLines(paste0("<",ts,"schema/referenceTime> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Referenzzeit' .\n\n"),filecon)
for(i in min(indikator$MIN_JAHR,na.rm=T):max(indikator$MAX_JAHR,na.rm=T)){
writeLines(paste0("<",ts,"code/Z3112",i,"> a <http://www.w3.org/2004/02/skos/core#Concept> , <http://www.w3.org/2006/time#TemporalEntity> ;\n",
"<http://schema.org/name> 'Z3112",i,"' ;\n",
"<",ts,"schema/hasEnd> ",i,"-12-31^^<http://www.w3.org/2001/XMLSchema#date> ;\n",
"<",ts,"schema/referenceTime> <",ts,"code/Tag> ,\n",
"<",ts,"code/Monat> ,\n",
"<",ts,"code/Quartal> ,\n",
"<",ts,"code/Trimester> ,\n",
"<",ts,"code/Semester> ,\n",
"<",ts,"code/Jahr> .\n\n"),filecon)
}
close(filecon)
filecon<-file("data_ttl/datasets.ttl",open="w")
for(i in 1:nrow(indikator)){
writeLines(paste0("<",ts,"DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"> a <https://cube.link/Cube> ;\n",
"<http://schema.org/name> '",indikator$NAME[i],"' ;\n",
"<http://schema.org/identifier> 'DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"' ;\n",
"<https://cube.link/observationSet> <",ts,"DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"/observation/> ;\n",
"<https://cube.link/observationConstraint> <",ts,"DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"/shape/ .\n\n"),filecon)
}
close(filecon)
#code might be improved because of for loop
indikatorvalue$label<-paste0("DS",str_pad(indikatorvalue$INDIKATOR_ID,4,pad="0"),"-R",str_pad(indikatorvalue$RAUMEINHEIT_ID,5,pad="0"),"-Z3112",indikatorvalue$JAHR)
#for(i in 419:419){
for(i in indikator$INDIKATOR_ID){
filecon<-file(paste0("data_ttl/observationset_",str_pad(i,4,pad="0"),".ttl"),open="w")
print(paste0("DATASET:",i))
writeLines(paste0("<",ts,"DS",str_pad(i,4,pad="0"),"/observation/> a <https://cube.link/ObservationSet> ;\n"),filecon)
df<-indikatorvalue[indikatorvalue$INDIKATOR_ID==i,]
#PART1: Observation Collection
df$temp_string<-paste0("<https://cube.link/observation> <",ts,"DS",str_pad(i,4,pad="0"),"/observation/",df$label,"> ,\n")
#the last one has to be a point and not a comma
df$temp_string[nrow(df)]<-str_replace(df$temp_string[nrow(df)],",\n",".\n\n")
writeLines(df$temp_string,filecon)
close(filecon)
filecon<-file(paste0("data_ttl/observations_",str_pad(i,4,pad="0"),".ttl"),open="w")
#PART2: Observation Values
writeLines(paste0("<",ts,"DS",str_pad(i,4,pad="0"),"/observation/",df$label,">  a <https://cube.link/Observation> ;\n",
"<",ts,"property/ZEIT> <",ts,"code/Z3112",df$JAHR,"> ;\n",
"<",ts,"property/RAUM> <",ts,"code/R",str_pad(df$RAUMEINHEIT_ID,5,pad="0"),"> ;\n",
"<",ts,"attribute/KORREKTUR> false ;\n",
"<",ts,"measure/M",str_pad(i,4,pad="0"),"> ",df$VALUE," ;\n",
#TODO insert here properties
"<http://schema.org/identifier> 'Z3112",df$JAHR,"R",str_pad(df$RAUMEINHEIT_ID,5,pad="0"),str_pad(i,4,pad="0"),"XXX0000XXX0000XXX0000' ;\n",
"<https://cube.link/observedBy> <",ts,"> ;\n",
"<",ts,"property/TIME> '",df$JAHR,"-12-31'^^<http://www.w3.org/2001/XMLSchema#date> .\n\n"
),filecon)
close(filecon)
}
# ********************************
#Version 0.1 - 15.07.2021 - Raum, Zeit
# Variables to change
#ts: triple-store destination
ts<-"http://datashop.westeurope.cloudapp.azure.com/statistics/"
# Vorbereitungen ----
# *************************************
# Aendern der Sprache in R
Sys.setenv(LANG = "de")
# Clear R's Brain
#rm(list = ls())
# Laden der Libraries
library(pacman)
p_load(tidyverse, forcats, haven, readxl, stringr)
# Verbinden mit der DB ---> An pers√∂nliche EInstellungen anpassen
source("~/db_connect.R")
filecon<-file("data_ttl/datasets.ttl",open="w")
for(i in 1:nrow(indikator)){
writeLines(paste0("<",ts,"DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"> a <https://cube.link/Cube> ;\n",
"<http://schema.org/name> '",indikator$NAME[i],"' ;\n",
"<http://schema.org/identifier> 'DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"' ;\n",
"<https://cube.link/observationSet> <",ts,"DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"/observation/> ;\n",
"<https://cube.link/observationConstraint> <",ts,"DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"/shape/> .\n\n"),filecon)
}
# ********************************
#Version 0.1 - 15.07.2021 - Raum, Zeit
# Variables to change
#ts: triple-store destination
ts<-"http://datashop.westeurope.cloudapp.azure.com/statistics/"
# Vorbereitungen ----
# *************************************
# Aendern der Sprache in R
Sys.setenv(LANG = "de")
# Clear R's Brain
#rm(list = ls())
# Laden der Libraries
library(pacman)
p_load(tidyverse, forcats, haven, readxl, stringr)
# Verbinden mit der DB ---> An pers√∂nliche EInstellungen anpassen
source("~/db_connect.R")
filecon<-file("data_ttl/raum_zeit.ttl",open="w")
writeLines(paste0("<",ts,"property/RAUM> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Raum' ;\n","<http://schema.org/identifier> 'RAUM' .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Gemeinde> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Gemeinde' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Bezirk> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Bezirk> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Bezirk' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Kanton> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Planungsregion> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Planungsregion' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Kanton> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Kanton> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Kanton' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Land> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Land> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Land' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Kontinent> .\n\n"),filecon)
for(i in 1:nrow(raum)){
writeLines(paste0("<",ts,"code/R",str_pad(raum$RAUMEINHEIT_ID[i],5,pad="0"),"> a <http://www.w3.org/2004/02/skos/core#Concept> , <http://schema.org/Place> ;\n","<http://schema.org/name> '",raum$NAME[i],"'@de  ;\n","<http://www.w3.org/2004/02/skos/core#inScheme> <",ts,"scheme/",raum$DESCRIPTION[i],"> ;\n","<http://schema.org/identifier> 'R",str_pad(raum$RAUMEINHEIT_ID[i],5,pad="0"),"' .\n\n"),filecon)
}
writeLines(paste0("<",ts,"property/ZEIT> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Zeit' ;\n","<http://schema.org/description> 'Repr√§sentation der Zeit als Konzept, repr√§sentiert die vollst√§ndige Komplexit√§t.' ;\n","<http://schema.org/identifier> 'ZEIT' .\n\n"),filecon)
writeLines(paste0("<",ts,"property/TIME> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Zeit' ;\n","<http://schema.org/description> 'Repr√§sentation der Zeit als ISO 8601 Datum (vereinfacht).' ;\n","<http://schema.org/identifier> 'TIME' .\n\n"),filecon)
writeLines(paste0("<",ts,"schema/hasEnd> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Ende der Periode'@de ;\n","<http://schema.org/description> 'Ende einer zeitlichen Einheit'@de ;\n","<http://schema.org/identifier> 'hasEnd' .\n\n"),filecon)
writeLines(paste0("<",ts,"schema/referenceTime> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Referenzzeit' .\n\n"),filecon)
for(i in min(indikator$MIN_JAHR,na.rm=T):max(indikator$MAX_JAHR,na.rm=T)){
writeLines(paste0("<",ts,"code/Z3112",i,"> a <http://www.w3.org/2004/02/skos/core#Concept> , <http://www.w3.org/2006/time#TemporalEntity> ;\n",
"<http://schema.org/name> 'Z3112",i,"' ;\n",
"<",ts,"schema/hasEnd> ",i,"-12-31^^<http://www.w3.org/2001/XMLSchema#date> ;\n",
"<",ts,"schema/referenceTime> <",ts,"code/Tag> ,\n",
"<",ts,"code/Monat> ,\n",
"<",ts,"code/Quartal> ,\n",
"<",ts,"code/Trimester> ,\n",
"<",ts,"code/Semester> ,\n",
"<",ts,"code/Jahr> .\n\n"),filecon)
}
close(filecon)
filecon<-file("data_ttl/datasets.ttl",open="w")
for(i in 1:nrow(indikator)){
writeLines(paste0("<",ts,"DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"> a <https://cube.link/Cube> ;\n",
"<http://schema.org/name> '",indikator$NAME[i],"' ;\n",
"<http://schema.org/identifier> 'DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"' ;\n",
"<https://cube.link/observationSet> <",ts,"DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"/observation/> ;\n",
"<https://cube.link/observationConstraint> <",ts,"DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"/shape/> .\n\n"),filecon)
}
close(filecon)
filecon<-file("data_ttl/datasets.ttl",open="w")
for(i in 1:nrow(indikator)){
writeLines(paste0("<",ts,"DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"> a <https://cube.link/Cube> ;\n",
"<http://schema.org/name> '",indikator$NAME[i],"' ;\n",
"<http://schema.org/identifier> 'DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"' ;\n",
"<https://cube.link/observationSet> <",ts,"DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"/observation/> ;\n",
"<https://cube.link/observationConstraint> <",ts,"DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"/shape/> .\n\n"),filecon)
}
close(filecon)
# ********************************
#Version 0.1 - 15.07.2021 - Raum, Zeit
# Variables to change
#ts: triple-store destination
ts<-"http://datashop.westeurope.cloudapp.azure.com/statistics/"
# Vorbereitungen ----
# *************************************
# Aendern der Sprache in R
Sys.setenv(LANG = "de")
# Clear R's Brain
#rm(list = ls())
# Laden der Libraries
library(pacman)
p_load(tidyverse, forcats, haven, readxl, stringr)
# Verbinden mit der DB ---> An pers√∂nliche EInstellungen anpassen
source("~/db_connect.R")
filecon<-file("data_ttl/raum_zeit.ttl",open="w",encoding="UTF-8")
writeLines(paste0("<",ts,"property/RAUM> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Raum' ;\n","<http://schema.org/identifier> 'RAUM' .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Gemeinde> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Gemeinde' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Bezirk> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Bezirk> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Bezirk' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Kanton> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Planungsregion> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Planungsregion' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Kanton> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Kanton> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Kanton' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Land> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Land> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Land' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Kontinent> .\n\n"),filecon)
for(i in 1:nrow(raum)){
writeLines(paste0("<",ts,"code/R",str_pad(raum$RAUMEINHEIT_ID[i],5,pad="0"),"> a <http://www.w3.org/2004/02/skos/core#Concept> , <http://schema.org/Place> ;\n","<http://schema.org/name> '",raum$NAME[i],"'@de  ;\n","<http://www.w3.org/2004/02/skos/core#inScheme> <",ts,"scheme/",raum$DESCRIPTION[i],"> ;\n","<http://schema.org/identifier> 'R",str_pad(raum$RAUMEINHEIT_ID[i],5,pad="0"),"' .\n\n"),filecon)
}
writeLines(paste0("<",ts,"property/ZEIT> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Zeit' ;\n","<http://schema.org/description> 'Repr√§sentation der Zeit als Konzept, repr√§sentiert die vollst√§ndige Komplexit√§t.' ;\n","<http://schema.org/identifier> 'ZEIT' .\n\n"),filecon)
writeLines(paste0("<",ts,"property/TIME> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Zeit' ;\n","<http://schema.org/description> 'Repr√§sentation der Zeit als ISO 8601 Datum (vereinfacht).' ;\n","<http://schema.org/identifier> 'TIME' .\n\n"),filecon)
writeLines(paste0("<",ts,"schema/hasEnd> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Ende der Periode'@de ;\n","<http://schema.org/description> 'Ende einer zeitlichen Einheit'@de ;\n","<http://schema.org/identifier> 'hasEnd' .\n\n"),filecon)
writeLines(paste0("<",ts,"schema/referenceTime> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Referenzzeit' .\n\n"),filecon)
for(i in min(indikator$MIN_JAHR,na.rm=T):max(indikator$MAX_JAHR,na.rm=T)){
writeLines(paste0("<",ts,"code/Z3112",i,"> a <http://www.w3.org/2004/02/skos/core#Concept> , <http://www.w3.org/2006/time#TemporalEntity> ;\n",
"<http://schema.org/name> 'Z3112",i,"' ;\n",
"<",ts,"schema/hasEnd> ",i,"-12-31^^<http://www.w3.org/2001/XMLSchema#date> ;\n",
"<",ts,"schema/referenceTime> <",ts,"code/Tag> ,\n",
"<",ts,"code/Monat> ,\n",
"<",ts,"code/Quartal> ,\n",
"<",ts,"code/Trimester> ,\n",
"<",ts,"code/Semester> ,\n",
"<",ts,"code/Jahr> .\n\n"),filecon)
}
close(filecon)
# ********************************
#Version 0.1 - 15.07.2021 - Raum, Zeit
# Variables to change
#ts: triple-store destination
ts<-"http://datashop.westeurope.cloudapp.azure.com/statistics/"
# Vorbereitungen ----
# *************************************
# Aendern der Sprache in R
Sys.setenv(LANG = "de")
# Clear R's Brain
#rm(list = ls())
# Laden der Libraries
library(pacman)
p_load(tidyverse, forcats, haven, readxl, stringr)
# Verbinden mit der DB ---> An pers√∂nliche EInstellungen anpassen
source("~/db_connect.R")
filecon<-file("data_ttl/raum_zeit.ttl",open="w",encoding="UTF-8")
writeLines(paste0("<",ts,"property/RAUM> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Raum' ;\n","<http://schema.org/identifier> 'RAUM' .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Gemeinde> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Gemeinde' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Bezirk> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Bezirk> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Bezirk' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Kanton> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Planungsregion> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Planungsregion' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Kanton> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Kanton> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Kanton' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Land> .\n\n"),filecon)
writeLines(paste0("<",ts,"scheme/Land> a <http://schema.org/DefinedTermSet> ;\n","<http://schema.org/name> 'Land' ;\n","<http://www.w3.org/2004/02/skos/core#broader> <",ts,"scheme/Kontinent> .\n\n"),filecon)
for(i in 1:nrow(raum)){
writeLines(paste0("<",ts,"code/R",str_pad(raum$RAUMEINHEIT_ID[i],5,pad="0"),"> a <http://www.w3.org/2004/02/skos/core#Concept> , <http://schema.org/Place> ;\n","<http://schema.org/name> '",raum$NAME[i],"'@de  ;\n","<http://www.w3.org/2004/02/skos/core#inScheme> <",ts,"scheme/",raum$DESCRIPTION[i],"> ;\n","<http://schema.org/identifier> 'R",str_pad(raum$RAUMEINHEIT_ID[i],5,pad="0"),"' .\n\n"),filecon)
}
writeLines(paste0("<",ts,"property/ZEIT> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Zeit' ;\n","<http://schema.org/description> 'Repr√§sentation der Zeit als Konzept, repr√§sentiert die vollst√§ndige Komplexit√§t.' ;\n","<http://schema.org/identifier> 'ZEIT' .\n\n"),filecon)
writeLines(paste0("<",ts,"property/TIME> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Zeit' ;\n","<http://schema.org/description> 'Repr√§sentation der Zeit als ISO 8601 Datum (vereinfacht).' ;\n","<http://schema.org/identifier> 'TIME' .\n\n"),filecon)
writeLines(paste0("<",ts,"schema/hasEnd> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Ende der Periode'@de ;\n","<http://schema.org/description> 'Ende einer zeitlichen Einheit'@de ;\n","<http://schema.org/identifier> 'hasEnd' .\n\n"),filecon)
writeLines(paste0("<",ts,"schema/referenceTime> a <http://www.w3.org/1999/02/22-rdf-syntax-ns#Property> ;\n","<http://schema.org/name> 'Referenzzeit' .\n\n"),filecon)
for(i in min(indikator$MIN_JAHR,na.rm=T):max(indikator$MAX_JAHR,na.rm=T)){
writeLines(paste0("<",ts,"code/Z3112",i,"> a <http://www.w3.org/2004/02/skos/core#Concept> , <http://www.w3.org/2006/time#TemporalEntity> ;\n",
"<http://schema.org/name> 'Z3112",i,"' ;\n",
"<",ts,"schema/hasEnd> '",i,"-12-31'^^<http://www.w3.org/2001/XMLSchema#date> ;\n",
"<",ts,"schema/referenceTime> <",ts,"code/Tag> ,\n",
"<",ts,"code/Monat> ,\n",
"<",ts,"code/Quartal> ,\n",
"<",ts,"code/Trimester> ,\n",
"<",ts,"code/Semester> ,\n",
"<",ts,"code/Jahr> .\n\n"),filecon)
}
close(filecon)
filecon<-file("data_ttl/datasets.ttl",open="w")
for(i in 1:nrow(indikator)){
writeLines(paste0("<",ts,"DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"> a <https://cube.link/Cube> ;\n",
"<http://schema.org/name> '",indikator$NAME[i],"' ;\n",
"<http://schema.org/identifier> 'DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"' ;\n",
"<https://cube.link/observationSet> <",ts,"DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"/observation/> ;\n",
"<https://cube.link/observationConstraint> <",ts,"DS",str_pad(indikator$INDIKATOR_ID[i],4,pad="0"),"/shape/> .\n\n"),filecon)
}
close(filecon)
library(SPARQL) # SPARQL querying package
library(ggplot2)
# Step 1 - Set up preliminaries and define query
#actually it doesnt matter which one of the two followings:
#endpoint <- "http://datashop.westeurope.cloudapp.azure.com/statistics/sparql"
endpoint <- "http://datashop.westeurope.cloudapp.azure.com/statistics/query"
# create query statement
query <-
"
PREFIX schema: <http://schema.org/>
PREFIX cube: <https://cube.link/>
PREFIX property: <http://datashop.westeurope.cloudapp.azure.com/statistics/property/>
#SELECT ?time ?place ?count
SELECT ?obs ?count ?place ?time ?id ?count ?zeit
WHERE {
<http://datashop.westeurope.cloudapp.azure.com/statistics/DS0048> a cube:Cube;
cube:observationSet/cube:observation ?obs.
?obs schema:identifier ?id .
OPTIONAL{         ?obs property:RAUM/schema:name ?place .}
?obs property:TIME  ?time .
?obs property:ZEIT  ?zeit .
OPTIONAL{ ?obs <http://datashop.westeurope.cloudapp.azure.com/statistics/measure/M0048> ?count .}
}
"
# Step 2 - Use SPARQL package to submit query and save results to a data frame
qd <- SPARQL(endpoint,query)
df <- qd$results
head(df)
